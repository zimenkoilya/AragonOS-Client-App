{"version":3,"sources":["../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","../src/index.ts","../node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","chainIdToNetwork","PortisConnector","dAppId","networks","config","chainIds","n","Number","chainId","every","c","invariant","supportedChainIds","handleOnLogout","bind","handleOnActiveWalletChanged","handleOnError","emitDeactivate","account","emitUpdate","error","emitError","activate","portis","onLogout","onActiveWalletChanged","provider","enable","accounts","m","Portis","getProvider","getChainId","send","getAccount","deactivate","changeNetwork","newNetwork","isGasRelayEnabled","close","logout","AbstractConnector","script","document","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":";AEgCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAA,IAAA,EAAA,QAAA,kCAAA,EAAA,EAAA,QAAA,mBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,OAAA,EAAA,WAAA,EAAA,UAAA,YAAA,EAAA,EAAA,UAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EA5BA,IAAMkD,EAAkD,CACnD,EAAA,UACA,EAAA,UACA,EAAA,UACA,EAAA,SACC,GAAA,QACC,IAAA,OACD,GAAA,SACA,GAAA,gBACA,GAAA,OACA,GAAA,QACA,GAAA,UACD,EAAA,OACE,IAAA,cACD,GAAA,qBACC,IAAA,eACA,IAAA,OACE,MAAA,gBAWIC,EAAb,SAAA,GAOE,SAAA,EAAA,GAPF,IAAA,EAOgBC,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,OAAAA,OAAAA,IAAAA,EAAS,GAAA,EACjCC,EAAWF,EAASzB,IAAI,SAAC4B,GAAe,MAAa,iBAANA,EAAiBA,EAAIC,OAAOD,EAAEE,WARvF,OAUMH,EAASI,MAAM,SAACC,GAAe,QAAEV,EAAiBU,OADpDC,EAAS,EAAA,UAAA,IAIT,EAAA,EAAA,KAAA,KAAM,CAAEC,kBAAmBP,KAA3B,MAEKH,OAASA,EACd,EAAKC,SAAWA,EAChB,EAAKC,OAASA,EAEd,EAAKS,eAAiB,EAAKA,eAAeC,KAApB,EAAA,IACtB,EAAKC,4BAA8B,EAAKA,4BAA4BD,KAAjC,EAAA,IACnC,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,EAAA,IArBzB,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAwBUD,eAAA,WAIDI,KAAAA,kBA5BT,EA+BUF,4BAAA,SAA4BG,GAI7BC,KAAAA,WAAW,CAAED,QAAAA,KAnCtB,EAsCUF,cAAA,SAAcI,GAIfC,KAAAA,UAAUD,IA1CnB,EA6CeE,SA7Cf,WAAA,IAAA,IAAA,EAAA,WA2D0B,OAJtB,EAAKC,OAAOC,SAAS,EAAKX,gBAC1B,EAAKU,OAAOE,sBAAsB,EAAKV,6BACvC,EAAKQ,OAAOxB,QAAQ,EAAKiB,eAEH,QAAA,QAAA,EAAKO,OAAOG,SAASC,SAASnD,KAAK,SAACoD,GAA+BA,OAAAA,EAAS,MAA5E,KAAA,SAAhBV,GAEC,MAAA,CAAEQ,SAAU,EAAKH,OAAOG,SAAUR,QAAAA,MAfpC,EAAA,KA9CT,EAAA,WA8CQ,IAAC,EAAKK,OACa,OAAA,QAAA,QAAA,QAAO,iBAAP,CAAO,QAAA,QAAA,iBAAgB/C,KAAK,SAAAqD,GAAC,IAAA,EAAA,OAAA,OAAA,EAAA,MAAIA,OAAJ,EAAIA,EAAC,SAAL,EAAkBA,KAA/C,KAAA,SAAfC,GACN,EAAKP,OAAS,IAAIO,EAChB,EAAK5B,OACuB,iBAArB,EAAKC,SAAS,GAAkBH,EAAiB,EAAKG,SAAS,IAAO,EAAKA,SAAS,GAC3F,EAAKC,UAnDb,GAAA,OAAA,QAAA,QAAA,GAAA,EAAA,KAAA,EAAA,KAAA,GAAA,KAAA,MAAA,GAAA,OAAA,QAAA,OAAA,KAAA,EAgEe2B,YAhEf,WAAA,IAiEI,OAAA,QAAA,QAAO,KAAKR,OAAOG,UAjEvB,MAAA,GAAA,OAAA,QAAA,OAAA,KAAA,EAoEeM,WApEf,WAAA,IAqEI,OAAA,QAAA,QAAO,KAAKT,OAAOG,SAASO,KAAK,gBArErC,MAAA,GAAA,OAAA,QAAA,OAAA,KAAA,EAwEeC,WAxEf,WAAA,IAyEI,OAAA,QAAA,QAAO,KAAKX,OAAOG,SAASO,KAAK,gBAAgBzD,KAAK,SAACoD,GAA+BA,OAAAA,EAAS,MAzEnG,MAAA,GAAA,OAAA,QAAA,OAAA,KAAA,EA4ESO,WAAA,WACAZ,KAAAA,OAAOC,SAAS,cAChBD,KAAAA,OAAOE,sBAAsB,cAC7BF,KAAAA,OAAOxB,QAAQ,eA/ExB,EAkFeqC,cAlFf,SAkF6BC,EAA8BC,GAlF3D,IAAA,MAmF8B,iBAAfD,GACGrC,EAAiBqC,KAA7B1B,EAAS,EAAA,UAAA,GACT,KAAKY,OAAOa,cAAcpC,EAAiBqC,GAAaC,GAAxD,KACKnB,WAAW,CAAEX,QAAS6B,MAD3B,KAGKd,OAAOa,cAAcC,EAAYC,GAHtC,KAIKnB,WAAW,CAAEX,QAASD,OAAO8B,EAAW7B,YAzFnD,QAAA,UAAA,MAAA,GAAA,OAAA,QAAA,OAAA,KAAA,EA6Fe+B,MA7Ff,WAAA,IA8FU,IAAA,EAAA,KAAA,OAAA,QAAA,QAAA,EAAKhB,OAAOiB,UAAZ,KAAA,WACN,EAAKvB,mBA/FT,MAAA,GAAA,OAAA,QAAA,OAAA,KAAA,EAAA,CAAqCwB,EAArC,mBAAA,QAAA,gBAAA;;AFhCA,IAAI3F,EAAY,KAChB,SAASC,IAKAD,OAJFA,IACHA,EAAYE,KAGPF,EAGT,SAASE,IAEH,IACI,MAAA,IAAIC,MACV,MAAOC,GACHC,IAAAA,GAAW,GAAKD,EAAIE,OAAOC,MAAM,iEACjCF,GAAAA,EACKG,OAAAA,EAAWH,EAAQ,IAIvB,MAAA,IAGT,SAASG,EAAWC,GACX,OAAC,GAAKA,GAAKC,QAAQ,iFAAkF,MAAQ,IAGtHC,QAAQT,aAAeD,EACvBU,QAAQH,WAAaA;;AC5BrB,IAAIN,EAAeU,QAAQ,gBAAgBV,aAE3C,SAASW,EAAgBC,GAClBC,MAAMC,QAAQF,KACjBA,EAAU,CAACA,IAGTG,IAAAA,EAAKH,EAAQA,EAAQI,OAAS,GAE9B,IACKC,OAAAA,QAAQC,QAAQR,QAAQK,IAC/B,MAAOb,GACHA,GAAa,qBAAbA,EAAIiB,KACC,OAAA,IAAIC,EAAY,SAAUF,EAASG,GACxCC,EAAYV,EAAQW,MAAM,GAAI,IAC3BC,KAAK,WACGd,OAAAA,QAAQK,KAEhBS,KAAKN,EAASG,KAIfnB,MAAAA,GAIV,SAASoB,EAAYV,GACZK,OAAAA,QAAQQ,IAAIb,EAAQc,IAAIC,IAGjC,IAAIC,EAAgB,GACpB,SAASC,EAAqBC,EAAMC,GAClCH,EAAcE,GAAQC,EAGxBC,OAAOvB,QAAUA,QAAUE,EAC3BF,QAAQwB,KAAOX,EACfb,QAAQyB,SAAWL,EAEnB,IAAIjB,EAAU,GACd,SAASe,EAAWQ,GACdpB,IAAAA,EAMAH,GALAC,MAAMC,QAAQqB,KAChBpB,EAAKoB,EAAO,GACZA,EAASA,EAAO,IAGdvB,EAAQuB,GACHvB,OAAAA,EAAQuB,GAGbL,IAAAA,GAAQK,EAAOC,UAAUD,EAAOE,YAAY,KAAO,EAAGF,EAAOnB,SAAWmB,GAAQG,cAChFC,EAAeX,EAAcE,GAC7BS,OAAAA,EACK3B,EAAQuB,GAAUI,EAAavC,IAAiBmC,GACpDX,KAAK,SAAUgB,GAKPA,OAJHA,GACFR,OAAOG,OAAOD,SAASnB,EAAIyB,GAGtBA,IACNC,MAAM,SAASC,GAGVA,aAFC9B,EAAQuB,GAETO,SAXRH,EAgBN,SAASnB,EAAYuB,GACdA,KAAAA,SAAWA,EACXC,KAAAA,QAAU,KAGjBxB,EAAYyB,UAAUrB,KAAO,SAAUsB,EAAWC,GAEzC,OADc,OAAjB,KAAKH,UAAkB,KAAKA,QAAU,IAAI3B,QAAQ,KAAK0B,WACpD,KAAKC,QAAQpB,KAAKsB,EAAWC,IAGtC3B,EAAYyB,UAAUJ,MAAQ,SAAUM,GAE/B,OADc,OAAjB,KAAKH,UAAkB,KAAKA,QAAU,IAAI3B,QAAQ,KAAK0B,WACpD,KAAKC,QAAQH,MAAMM;;AEjF5Bf,OAAOvB,QAAU,SAAsB0B,GAC9B,OAAA,IAAIlB,QAAQ,SAAUC,EAASG,GAChCqE,IAAAA,EAASC,SAASC,cAAc,UACpCF,EAAOG,OAAQ,EACfH,EAAO5D,KAAO,kBACd4D,EAAOI,QAAU,QACjBJ,EAAOK,IAAM5D,EACbuD,EAAOM,QAAU,SAAUtD,GACzBgD,EAAOM,QAAUN,EAAOO,OAAS,KACjC5E,EAAOqB,IAGTgD,EAAOO,OAAS,WACdP,EAAOM,QAAUN,EAAOO,OAAS,KACjC/E,KAGFyE,SAASO,qBAAqB,QAAQ,GAAGC,YAAYT","file":"portis-connector.esm.02c6b0a6.js","sourceRoot":"..\\src","sourcesContent":["var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\nconst chainIdToNetwork: { [network: number]: string } = {\n  1: 'mainnet',\n  3: 'ropsten',\n  4: 'rinkeby',\n  5: 'goerli',\n  42: 'kovan',\n  100: 'xdai',\n  30: 'orchid',\n  31: 'orchidTestnet',\n  99: 'core',\n  77: 'sokol',\n  61: 'classic',\n  8: 'ubiq',\n  108: 'thundercore',\n  18: 'thundercoreTestnet',\n  163: 'lightstreams',\n  122: 'fuse',\n  15001: 'maticTestnet'\n}\n\ntype Network = number | { chainId: string; [key: string]: any }\n\ninterface PortisConnectorArguments {\n  dAppId: string\n  networks: Network[]\n  config?: any\n}\n\nexport class PortisConnector extends AbstractConnector {\n  private readonly dAppId: string\n  private readonly networks: Network[]\n  private readonly config: any\n\n  public portis: any\n\n  constructor({ dAppId, networks, config = {} }: PortisConnectorArguments) {\n    const chainIds = networks.map((n): number => (typeof n === 'number' ? n : Number(n.chainId)))\n    invariant(\n      chainIds.every((c): boolean => !!chainIdToNetwork[c]),\n      `One or more unsupported networks ${networks}`\n    )\n    super({ supportedChainIds: chainIds })\n\n    this.dAppId = dAppId\n    this.networks = networks\n    this.config = config\n\n    this.handleOnLogout = this.handleOnLogout.bind(this)\n    this.handleOnActiveWalletChanged = this.handleOnActiveWalletChanged.bind(this)\n    this.handleOnError = this.handleOnError.bind(this)\n  }\n\n  private handleOnLogout(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onLogout' event\")\n    }\n    this.emitDeactivate()\n  }\n\n  private handleOnActiveWalletChanged(account: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onActiveWalletChanged' event with payload\", account)\n    }\n    this.emitUpdate({ account })\n  }\n\n  private handleOnError(error: Error): void {\n    if (__DEV__) {\n      console.log(\"Handling 'onError' event\")\n    }\n    this.emitError(error)\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.portis) {\n      const Portis = await import('@portis/web3').then(m => m?.default ?? m)\n      this.portis = new Portis(\n        this.dAppId,\n        typeof this.networks[0] === 'number' ? chainIdToNetwork[this.networks[0]] : (this.networks[0] as any),\n        this.config\n      )\n    }\n\n    this.portis.onLogout(this.handleOnLogout)\n    this.portis.onActiveWalletChanged(this.handleOnActiveWalletChanged)\n    this.portis.onError(this.handleOnError)\n\n    const account = await this.portis.provider.enable().then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.portis.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.portis.provider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.portis.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.portis.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.portis.onLogout(() => {})\n    this.portis.onActiveWalletChanged(() => {})\n    this.portis.onError(() => {})\n  }\n\n  public async changeNetwork(newNetwork: number | Network, isGasRelayEnabled?: boolean) {\n    if (typeof newNetwork === 'number') {\n      invariant(!!chainIdToNetwork[newNetwork], `Invalid chainId ${newNetwork}`)\n      this.portis.changeNetwork(chainIdToNetwork[newNetwork], isGasRelayEnabled)\n      this.emitUpdate({ chainId: newNetwork })\n    } else {\n      this.portis.changeNetwork(newNetwork, isGasRelayEnabled)\n      this.emitUpdate({ chainId: Number(newNetwork.chainId) })\n    }\n  }\n\n  public async close() {\n    await this.portis.logout()\n    this.emitDeactivate()\n  }\n}\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}
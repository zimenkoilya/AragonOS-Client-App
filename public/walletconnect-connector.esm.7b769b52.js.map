{"version":3,"sources":["../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","../src/index.ts","../node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","URI_AVAILABLE","UserRejectedRequestError","name","constructor","message","getSupportedChains","supportedChainIds","rpc","Object","keys","k","Number","undefined","WalletConnectConnector","config","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","chainId","emitUpdate","accounts","account","emitDeactivate","walletConnectProvider","stop","removeListener","activate","enable","error","on","provider","wc","connected","createSession","emit","uri","m","WalletConnectProvider","getProvider","getChainId","send","getAccount","deactivate","close","AbstractConnector","script","document","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":"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","file":"walletconnect-connector.esm.7b769b52.js","sourceRoot":"..\\src","sourcesContent":["var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { IWalletConnectProviderOptions } from '@walletconnect/types'\n\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\n\nexport interface WalletConnectConnectorArguments extends IWalletConnectProviderOptions {\n  supportedChainIds?: number[]\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nfunction getSupportedChains({ supportedChainIds, rpc }: WalletConnectConnectorArguments): number[] | undefined {\n  if (supportedChainIds) {\n    return supportedChainIds\n  }\n\n  return rpc ? Object.keys(rpc).map(k => Number(k)) : undefined\n}\n\nexport class WalletConnectConnector extends AbstractConnector {\n  private readonly config: WalletConnectConnectorArguments\n\n  public walletConnectProvider?: any\n\n  constructor(config: WalletConnectConnectorArguments) {\n    super({ supportedChainIds: getSupportedChains(config) })\n\n    this.config = config\n\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleDisconnect = this.handleDisconnect.bind(this)\n  }\n\n  private handleChainChanged(chainId: number | string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts[0] })\n  }\n\n  private handleDisconnect(): void {\n    if (__DEV__) {\n      console.log(\"Handling 'disconnect' event\")\n    }\n    this.emitDeactivate()\n    // we have to do this because of a @walletconnect/web3-provider bug\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.walletConnectProvider = undefined\n    }\n\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.walletConnectProvider) {\n      const WalletConnectProvider = await import('@walletconnect/web3-provider').then(m => m?.default ?? m)\n      this.walletConnectProvider = new WalletConnectProvider(this.config)\n    }\n\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\n    if (!this.walletConnectProvider.wc.connected) {\n      await this.walletConnectProvider.wc.createSession({\n        chainId: this.supportedChainIds && this.supportedChainIds.length > 0 ? this.supportedChainIds[0] : 1\n      })\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\n    }\n\n    const account = await this.walletConnectProvider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        // TODO ideally this would be a better check\n        if (error.message === 'User closed modal') {\n          throw new UserRejectedRequestError()\n        }\n\n        throw error\n      })\n\n    this.walletConnectProvider.on('disconnect', this.handleDisconnect)\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\n\n    return { provider: this.walletConnectProvider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.walletConnectProvider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.walletConnectProvider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.walletConnectProvider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    if (this.walletConnectProvider) {\n      this.walletConnectProvider.stop()\n      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect)\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\n    }\n  }\n\n  public async close() {\n    await this.walletConnectProvider?.close()\n  }\n}\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}